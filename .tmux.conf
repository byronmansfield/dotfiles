##############################
#  _
# | |_ _ __ ___  _   ___  __
# | __| '_ ` _ \| | | \ \/ /
# | |_| | | | | | |_| |>  <
#  \__|_| |_| |_|\__,_/_/\_\
#
#############################

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "xsel -i -p -b"
bind-key p run "xsel -o | tmux load-buffer - ; tmux paste-buffer"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "xsel -i -p -b"

############################################################################
# Reset Prefix
############################################################################
set -g prefix C-a
bind-key a send-prefix # for nested tmux sessions

############################################################################
# Global options
############################################################################
# large history
set-option -g history-limit 10000

# colors
setw -g mode-bg black
set -g default-terminal "screen-256color"
set-option -g pane-active-border-fg colour28

# Copy mode colors
set-window-option -g mode-fg colour233
set-window-option -g mode-bg colour214

# utf8 support
#set-option -g status-utf8 on
#set status-utf8 on
#set utf8 on
#set -g utf8
#set-window-option -g utf8 on

# basic settings
set-window-option -g xterm-keys on # for vim
set-window-option -g mode-keys vi # vi key
set-window-option -g monitor-activity on
set-window-option -g window-status-current-fg white
setw -g window-status-current-attr reverse

# re-number windows when one is closed
set -g renumber-windows on
set -g base-index 1
set -g pane-base-index 1

############################################################################
# Mouse Settings
############################################################################
set-option -g -q mouse on

# makes tmux 2.1 mouse scroll act like <2.1
bind -n WheelUpPane if-shell -Ft= '#{?pane_in_mode,1,#{mouse_any_flag}}' \
        'send -Mt=' 'if-shell -Ft= "#{alternate_on}" \
        "send -t= Up" "copy-mode -et="'
bind -n WheelDownPane if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
        'send -Mt=' 'if-shell -Ft= "#{alternate_on}" \
        "send -t= Down" "send -Mt="'

# set mouse on with prefix m
bind m \
  set -g mouse on \;\
  display 'Mouse: ON'

# set mouse off with prefix M
bind M \
  set -g mouse off \;\
  display 'Mouse: OFF'

############################################################################
# Status Bar
############################################################################
set-option -g status-justify centre
set-option -g status-bg colour234
set-option -g status-fg cyan
set-option -g status-interval 5
set-option -g status-left-length 30
set-option -g status-left '#[fg=magenta]Â» #[fg=blue,bold]#T #[fg=colour220]#S #[default]'
set-option -g status-right '#[fg=colour166] CPU:#{cpu_percentage} #[fg=colour62]%a %h-%d %H:%M'
setw -g window-status-format '#[fg=colour249]#[bg=colour238] #I #[bg=colour235]#[fg=colour241] #W '
setw -g window-status-current-format '#[fg=colour234]#[bg=colour33] #I #[fg=colour233]#[bg=colour202] #W '
set -g window-status-separator ''

set-option -g visual-activity on

############################################################################
# Unbindings
############################################################################
unbind [ # copy mode bound to escape key
unbind p
unbind j
unbind C-b # unbind default leader key
unbind '"' # unbind horizontal split
unbind %   # unbind vertical split

############################################################################
# Bindings
############################################################################
# reload tmux conf
bind-key r source-file ~/.tmux.conf

bind-key Escape copy-mode
bind p paste-buffer

# new split in current pane (horizontal / vertical)
bind-key - split-window -v # split pane horizontally
bind-key \ split-window -h # split pane vertically

# list panes
bind-key Space list-panes

# break-pane
bind-key Enter break-pane

bind-key Space command-prompt "joinp -t:%%" # %% = prompt for window.pane [-V|H] # vert|hor split

# previous pane
bind-key -n C-up prev
bind-key -n C-left prev

# next pane
bind-key -n C-right next
bind-key -n C-down next

############################################################################
# windows
############################################################################
set-window-option -g window-status-current-bg red
bind C-j previous-window
bind C-k next-window
bind-key C-a last-window # C-a C-a for last active window
bind A command-prompt "rename-window %%"
# By default, all windows in a session are constrained to the size of the
# smallest client connected to that session,
# even if both clients are looking at different windows.
# It seems that in this particular case, Screen has the better default
# where a window is only constrained in size if a smaller client
# is actively looking at it.
setw -g aggressive-resize on

############################################################################
# panes
############################################################################
# Navigation ---------------------------------------------------------------
# use the vim motion keys to move between panes
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Resizing ---------------------------------------------------------------
bind-key C-h resize-pane -L
bind-key C-j resize-pane -D
bind-key C-k resize-pane -U
bind-key C-l resize-pane -R

############################################################################
# layouts
############################################################################
bind o select-layout "active-only"
bind M-- select-layout "even-vertical"
bind M-| select-layout "even-horizontal"
bind M-r rotate-window

############################################################################
# Plug-ins
############################################################################

# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
	tmux-plugins/tmux-sensible       \
	tmux-plugins/tmux-resurrect      \
	tmux-plugins/tmux-continuum      \
	tmux-plugins/tmux-cpu            \
'
# Adds Support for restoring vim sessions
set -g @resurrect-strategy-vim 'session'

# Initializes TMUX plugin manager and resurrect
run-shell '~/.tmux/plugins/tpm/tpm'
run-shell '~/.tmux/plugins/tmux-resurrect/resurrect.tmux'
